version: '3.6'

x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

services:
  monitor:
    image: redpencil/docker-monitor-service:1.3.1
    privileged: true
    userns_mode: "host"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      MONITOR_SYNC_INTERVAL: 10000
    logging: *default-logging
  capture:
    image: redpencil/docker-network-capture-service:1.8.4
    privileged: true
    userns_mode: "host"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      CAPTURE_CONTAINER_FILTER: '?uri docker:label/docker:key "logging".'
      CAPTURE_SYNC_INTERVAL: 60000
      MONITOR_IMAGE: "redpencil/http-logger-packetbeat-service:1.6.0"
      LOGSTASH_NETWORK: "logstash-network"
      # Default configuration values for packetbeat
      PACKETBEAT_MAX_MESSAGE_SIZE: 102400 # Maximum total message size in bytes
      PACKETBEAT_LISTEN_PORTS: "[80, 81, 88, 8080, 8081, 9200, 8890, 1111, 4200]" # YAML array of ports
    depends_on: # Ensures this service is stopped before the db stops, because we need the db to clean up.
      - database
    logging: *default-logging
  stats:
    image: redpencil/docker-stats-service:0.0.2
    privileged: true
    userns_mode: "host"
    links:
      - stats-logstash:logstash
      - database:database
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    logging: *default-logging
  logstash:
    image: redpencil/http-logger-logstash-service:0.1.0
    user: "root"
    networks:
      - default
      - logstash-network
    volumes:
      - "./config/logstash-http/http-file-pipeline.conf:/usr/share/logstash/pipeline/logstash.conf:ro"
    logging: *default-logging
  stats-logstash:
    image: redpencil/http-logger-logstash-service:0.1.0
    user: "root"
    volumes:
      - "./config/logstash-stats/stats-file-pipeline.conf:/usr/share/logstash/pipeline/logstash.conf:ro"
    networks:
      - default
      - logstash-network
    logging: *default-logging
  triplestore:
    image: tenforce/virtuoso:1.3.2-virtuoso7.2.2
    environment:
      SPARQL_UPDATE: "true"
      DEFAULT_GRAPH: "http://mu.semte.ch/application"
    volumes:
      - ./config/db/virtuoso.ini:/data/virtuoso.ini:rw
      - ./data/db:/data:rw
    logging: *default-logging
  database:
    image: semtech/mu-authorization:0.6.0-beta.7
    volumes:
      - ./config/authorization:/config:ro
    environment:
      MU_SPARQL_ENDPOINT: "http://triplestore:8890/sparql"
      DATABASE_COMPATIBILITY: "Virtuoso"
    logging: *default-logging
  delta:
    image: semtech/mu-delta-notifier:0.1.0
    volumes:
      - ./config/delta:/config:ro
networks:
  logstash-network:
    name: "logstash-network" # Explicitly set the name to prevent scoping w/ the compose project name
    driver: "bridge"
